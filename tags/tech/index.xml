<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tech | Nazim</title>
    <link>https://www.nazim.dev/tags/tech/</link>
      <atom:link href="https://www.nazim.dev/tags/tech/index.xml" rel="self" type="application/rss+xml" />
    <description>Tech</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>© 2020 Nazimur Rahiman - All rights reserved</copyright><lastBuildDate>Mon, 01 Jun 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://www.nazim.dev/images/icon_hudac935d27c7abab8db1a8cd459536cfe_19313_512x512_fill_lanczos_center_2.png</url>
      <title>Tech</title>
      <link>https://www.nazim.dev/tags/tech/</link>
    </image>
    
    <item>
      <title>What is Jamstack?</title>
      <link>https://www.nazim.dev/blog/jamstack/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      <guid>https://www.nazim.dev/blog/jamstack/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Jamstack&lt;/strong&gt; is a cloud-native web development architecture based on client-side JavaScript code, reusable APIs, and markup content. It was pioneered and created by &lt;em&gt;&lt;strong&gt;Netlify&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In its purest form, the idea of Jamstack is that a web application is pre-built into static pages, using content and code to generate the output. In basic terms, Jamstack is a significant shift in focus from the now abstractable back end to the now-powerful front end.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    &lt;strong&gt;This website uses the Jamstack architecture:&lt;/strong&gt; Built using &lt;strong&gt;Hugo&lt;/strong&gt;, with the contents on a private &lt;strong&gt;Github&lt;/strong&gt; repository and static pages built and deployed on &lt;strong&gt;Netlify CDN&lt;/strong&gt;.
  &lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h3 id=&#34;why-did-i-migrate-to-jamstack&#34;&gt;Why did I migrate to Jamstack?&lt;/h3&gt;
&lt;h4 id=&#34;higher-security&#34;&gt;Higher Security&lt;/h4&gt;
&lt;p&gt;Having lost entire contents of my previous site hosted using Wordpress due to sql injection attacks and legal notices from some banks for sending spam links from my domain (due to the malicious php codes injected during the attacks), the higher security offered through the Jamstack infrastructure was the major advantage.&lt;/p&gt;
&lt;h4 id=&#34;better-performance&#34;&gt;Better Performance&lt;/h4&gt;
&lt;p&gt;Saving the site contents on a SQL database and retrieving and rendering the content everytime is absolutly unnecessary as there is no change in the content once it&amp;rsquo;s been created.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;jamstack-advantages&#34;&gt;Jamstack Advantages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Faster websites&lt;/strong&gt; - Optimize your site with prerendering and global delivery.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;More secure infrastructure&lt;/strong&gt; - By design, Jamstack architectures offer fewer points of attack.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;High scale without high complexity&lt;/strong&gt; - Optimize your site with prerendering and global delivery.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Improved developer experience&lt;/strong&gt; - Launch faster with more productive dev &amp;amp; deployment cycles&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.netlify.com/jamstack/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Netlify Jamstack&lt;/a&gt; - What, Why and how to Jamstack.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Image Credits:&lt;/em&gt; 
&lt;a href=&#34;https://commons.wikimedia.org/wiki/File:Jamstack_logo_%282017%29.svg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wikimedia Commons&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Markdown</title>
      <link>https://www.nazim.dev/blog/markdown/</link>
      <pubDate>Sun, 31 May 2020 00:00:00 +0000</pubDate>
      <guid>https://www.nazim.dev/blog/markdown/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Markdown is a lightweight markup language with plain-text-formatting syntax. Its design allows it to be converted to many output formats, but the original tool by the same name only supports HTML. Markdown is often used to format readme files, for writing messages in online discussion forums, and to create rich text using a plain text editor.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    The content of this website is completely edited and formatted using markdown.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;markdown-syntax&#34;&gt;Markdown Syntax:&lt;/h3&gt;
&lt;p&gt;These are the elements outlined in John Gruber’s original design document. All Markdown applications support these elements.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;heading&#34;&gt;Heading&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;# Heading 1
## Heading 2
### Heading 3
#### Heading 4
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The above syntax is rendered as shown below:&lt;/p&gt;
&lt;h1 id=&#34;heading-1&#34;&gt;Heading 1&lt;/h1&gt;
&lt;h2 id=&#34;heading-2&#34;&gt;Heading 2&lt;/h2&gt;
&lt;h3 id=&#34;heading-3&#34;&gt;Heading 3&lt;/h3&gt;
&lt;h4 id=&#34;heading-4&#34;&gt;Heading 4&lt;/h4&gt;
&lt;hr&gt;
&lt;h3 id=&#34;bold-text&#34;&gt;Bold Text&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;**Lorem Ipsum** is simply dummy text of the printing and typesetting industry.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Lorem Ipsum&lt;/strong&gt; is simply dummy text of the printing and typesetting industry.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;**Lorem Ipsum is simply dummy text of the printing and typesetting industry.**
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Lorem Ipsum is simply dummy text of the printing and typesetting industry.&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;italics&#34;&gt;Italics&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;*Lorem Ipsum* is simply dummy text of the printing and typesetting industry.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Lorem Ipsum&lt;/em&gt; is simply dummy text of the printing and typesetting industry.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;*Lorem Ipsum is simply dummy text of the printing and typesetting industry.*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;Lorem Ipsum is simply dummy text of the printing and typesetting industry.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;bloackquote&#34;&gt;Bloackquote&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;&amp;gt; Lorem Ipsum is simply dummy text of the printing and typesetting industry.
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Lorem Ipsum is simply dummy text of the printing and typesetting industry.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id=&#34;ordered-list&#34;&gt;Ordered List&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;1. Item Number 1
2. Item Number 2 
3. Item Number 3
&lt;/code&gt;&lt;/pre&gt;
&lt;ol&gt;
&lt;li&gt;Item Number 1&lt;/li&gt;
&lt;li&gt;Item Number 2&lt;/li&gt;
&lt;li&gt;Item Number 3&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;unordered-list&#34;&gt;Unordered List&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;- Item Number 1
- Item Number 2 
- Item Number 3
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Item Number 1&lt;/li&gt;
&lt;li&gt;Item Number 2&lt;/li&gt;
&lt;li&gt;Item Number 3&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;code&#34;&gt;Code&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;`code`
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;code&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;horizontal-line&#34;&gt;Horizontal Line&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;--- 
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h3 id=&#34;link&#34;&gt;Link&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;[My Adobe Portfolio](https://www.portfolio.nazim.dev)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.portfolio.nazim.dev&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;My Adobe Portfolio&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;image&#34;&gt;Image&lt;/h3&gt;
&lt;pre&gt;&lt;code class=&#34;language-markdown&#34;&gt;![alt text](image.jpg)
Below image is rendered with: 
![Markdown Logo](featured.jpg)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;featured.jpg&#34; alt=&#34;Markdown Logo&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;External Links:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.markdowntutorial.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markdown Tutorial&lt;/a&gt; - An open source website that allows you to try Markdown in your web browser.&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://www.markdownguide.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Markdown Guide&lt;/a&gt; - Everything you need to learn Markdown.&lt;/p&gt;
&lt;p&gt;
&lt;a href=&#34;https://sourcethemes.com/academic/docs/writing-markdown-latex/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Academic Theme Documentation&lt;/a&gt; - Rich content can be written in Academic using Markdown, LaTeX math, and Shortcodes.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Image Credits:&lt;/em&gt; 
&lt;a href=&#34;https://commons.wikimedia.org/wiki/File:Markdown-mark.svg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wikimedia Commons&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ghost (blog) on AWS Lightsail with Nginx, Let&#39;s Encrypt &amp; Mailgun</title>
      <link>https://www.nazim.dev/blog/ghost-on-aws-lightsail/</link>
      <pubDate>Tue, 21 May 2019 00:00:00 +0000</pubDate>
      <guid>https://www.nazim.dev/blog/ghost-on-aws-lightsail/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Ghost is a free and open source blogging platform written in JavaScript and distributed under the MIT License, designed to simplify the process of online publishing for individual bloggers as well as online publications.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The Ghost blogging software is free to download and use.&lt;/p&gt;
&lt;h4 id=&#34;the-prerequisites-recommended-by-ghost-are-as-below&#34;&gt;The prerequisites recommended by Ghost are as below&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu 16.04 or Ubuntu 18.04&lt;/li&gt;
&lt;li&gt;NGINX (minimum of 1.9.5 for SSL)&lt;/li&gt;
&lt;li&gt;A supported version of Node.js&lt;/li&gt;
&lt;li&gt;MySQL 5.5, 5.6, or 5.7 (not &amp;gt;= 8.0)&lt;/li&gt;
&lt;li&gt;Systemd&lt;/li&gt;
&lt;li&gt;A server with at least 1GB memory&lt;/li&gt;
&lt;li&gt;A registered domain name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;However, with the above server requirement of at least 1 GB memory, the minimum cost of the AWS Lightsail instance (linux based) will be $5.00 per month.&lt;/p&gt;
&lt;p&gt;It is possible to use the $3.50 per month instance which comes with 512MB memory by using the Alpine docker images available at Docker Hub.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This guide will take you through the steps required for hosting a Ghost blog (docker image) on AWS Lightsail with Nginx webserver, Letsencrypt SSL encryption.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;instructions&#34;&gt;Instructions&lt;/h3&gt;
&lt;p&gt;Create a Lightsail Instance
You can read about &lt;strong&gt;AWS Lightsail&lt;/strong&gt; from my previous post 
&lt;a href=&#34;https://www.nazim.dev/blog/aws-lightsail/&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Login/create an account with AWS Lightsail and then create an instance:&lt;/strong&gt;





  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.nazim.dev/img/aws-lightsail/Snip20190519_1.png&#34; &gt;


  &lt;img src=&#34;https://www.nazim.dev/img/aws-lightsail/Snip20190519_1.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;



&lt;/figure&gt;
&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Valid payment details have to be setup with AWS if you are creating the amazon account for the first time.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Choose a location as close as possible to the location where you get the most visitors from. For the instance, choose &lt;strong&gt;Linux/Unix&lt;/strong&gt; and select blueprint for OS Only. Under this category, choose &lt;strong&gt;Ubuntu 18.04 LTS&lt;/strong&gt;.&lt;/p&gt;





  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.nazim.dev/img/aws-lightsail/Snip20190519_3.png&#34; &gt;


  &lt;img src=&#34;https://www.nazim.dev/img/aws-lightsail/Snip20190519_3.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;Choose the instance plan for the lowest priced option at $3.50 USD per month.&lt;/p&gt;





  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.nazim.dev/img/aws-lightsail/Snip20190519_4.png&#34; &gt;


  &lt;img src=&#34;https://www.nazim.dev/img/aws-lightsail/Snip20190519_4.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;No additional scripts are required at this time. Once you have selected the name for your instance, click on &lt;strong&gt;&amp;ldquo;Create Instance&amp;rdquo;&lt;/strong&gt; button.&lt;/p&gt;
&lt;p&gt;There are few additional steps required for accessing the instance and the documentation by AWS Lightsail covers the steps in detail. &lt;strong&gt;Please follow the link below to setup SSH, Assign a static IP, etc.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://lightsail.aws.amazon.com/ls/docs/en_us/all&#34;&gt;https://lightsail.aws.amazon.com/ls/docs/en_us/all&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;update-packages&#34;&gt;Update Packages&lt;/h3&gt;
&lt;p&gt;Update the installed packages with the following lines.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Update package lists
sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Update installed packages
sudo apt-get upgrade
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;ufw&#34;&gt;UFW&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt; comes with it&amp;rsquo;s own &lt;strong&gt;firewall&lt;/strong&gt; - &lt;em&gt;UFW&lt;/em&gt; , but we will not be enabling this in our case as AWS Lightsail already comes with a firewall which you can configure under the networking tab in your instance. If the HTTPS port is not already available, use the &amp;ldquo;Add another&amp;rdquo; option to add the port 443 for HTTPS.&lt;/p&gt;





  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.nazim.dev/img/aws-lightsail/Snip20190519_5.png&#34; &gt;


  &lt;img src=&#34;https://www.nazim.dev/img/aws-lightsail/Snip20190519_5.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;p&gt;Once you have assigned the Static IP to your instance, modify the DNS Records at the domain registrar to point to the static IP.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An A record with &lt;a href=&#34;http://www.mydomain.com&#34;&gt;www.mydomain.com&lt;/a&gt; pointing to your server&amp;rsquo;s public IP address.&lt;/li&gt;
&lt;li&gt;An A record with mydomain.com pointing to your server&amp;rsquo;s public IP address.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;install-docker&#34;&gt;Install Docker&lt;/h3&gt;
&lt;p&gt;This example uses the script at 
&lt;a href=&#34;https://get.docker.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;get.docker.com&lt;/a&gt; to install the latest release of Docker CE on Linux.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;curl -fsSL https://get.docker.com -o get-docker.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you would like to use Docker as a non-root user, you should now consider adding your user to the “docker” group with something like: (replace your-user with ubuntu)&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo usermod -aG docker your-user
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Remember to log out and back in for this to take effect!
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;install-nginx&#34;&gt;Install NGINX&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;nginx [engine x] is an HTTP and reverse proxy server, a mail proxy server, and a generic TCP/UDP proxy server, originally written by Igor Sysoev. For a long time, it has been running on many heavily loaded Russian sites including Yandex, Mail.Ru, VK, and Rambler. According to Netcraft, nginx served or proxied 26.22% busiest sites in April 2019.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;Installing NGINX requires only the below command.&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# Install NGINX
sudo apt-get install nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once the installation is completed, you should be able to see the default NGINX html page when you access the static ip assigned to the Lightsail Instance through a browser.&lt;/p&gt;





  











&lt;figure &gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.nazim.dev/img/aws-lightsail/Snip20190520_6.png&#34; &gt;


  &lt;img src=&#34;https://www.nazim.dev/img/aws-lightsail/Snip20190520_6.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;



&lt;/figure&gt;

&lt;h3 id=&#34;setup-nginx-server-block&#34;&gt;Setup NGINX Server block&lt;/h3&gt;
&lt;p&gt;This step is required so that it&amp;rsquo;s easier if you want to add/host multiple domains in the same instance. &lt;em&gt;Initially, we will setup the domain name to point to a temporary server block so that the next step for Let&amp;rsquo;s encrypt can generate the required certificates for the domain.&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“VirtualHost” is an Apache term. NGINX does not have Virtual hosts, it has “Server Blocks” that use the server_name and listen directives to bind to tcp sockets.
You can find some examples for server blocks at the NGINX 
&lt;a href=&#34;https://www.nginx.com/resources/wiki/start/topics/examples/server_blocks/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;wiki page&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We will use the default directory /var/www/html for our initial setup. When you access the url &lt;a href=&#34;http://mydomain.com&#34;&gt;http://mydomain.com&lt;/a&gt;, the Welcome to NGINX page should be displayed.&lt;/p&gt;
&lt;p&gt;Create a copy of the default configuration into a new file.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/mydomain.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, open the new file you created in your text editor with &lt;strong&gt;sudo&lt;/strong&gt; privileges:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo nano /etc/nginx/sites-available/mydomain.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Copy the below lines in the editor and save:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;        listen 80;
        listen [::]:80;

        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;

        server_name mydomain.com www.mydomain.com;

        location / {
                try_files $uri $uri/ =404;
        }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Enable the server block:&lt;/strong&gt;
Now that we have our server block files, we need to enable them. We can do this by creating symbolic links from these files to the &lt;strong&gt;sites-enabled&lt;/strong&gt; directory, which Nginx reads from during startup.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo ln -s /etc/nginx/sites-available/mydomain.com /etc/nginx/sites-enabled/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Follow the steps below to prevent hash bucket memory problem:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo nano /etc/nginx/nginx.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Within the file, find the &lt;strong&gt;server_names_hash_bucket_size&lt;/strong&gt; directive. Remove the # symbol to uncomment the line:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vi&#34;&gt;http {

    server_names_hash_bucket_size 64;

}
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquote&gt;
&lt;p&gt;Next, test to make sure that there are no syntax errors in any of your Nginx files:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo nginx -t
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If no problems were found, restart Nginx to enable your changes:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo systemctl restart nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    If you access the URL &lt;a href=&#34;http://mydomain.com&#34;&gt;http://mydomain.com&lt;/a&gt; or &lt;a href=&#34;http://www.mydomain.com&#34;&gt;http://www.mydomain.com&lt;/a&gt;, you should be able to see the NGINX start page now.
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;install-ssl-certificates-with-lets-encrypt&#34;&gt;Install SSL certificates with Let&amp;rsquo;s encrypt&lt;/h3&gt;
&lt;p&gt;Digital Ocean has an excellent guide for the installation of Let&amp;rsquo;s Encrypt certificates at this 
&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-18-04&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;link&lt;/a&gt;. However, I will still provide the steps relevant to our current setup based on this guide below.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Install Let&amp;rsquo;s Encrypt certbot:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:certbot/certbot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You&amp;rsquo;ll need to press &lt;em&gt;ENTER&lt;/em&gt; to accept.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo add-apt-repository ppa:certbot/certbot
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Certbot is now ready to use.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Obtain the SSL Certificate:&lt;/strong&gt;
Certbot provides a variety of ways to obtain SSL certificates through plugins. The Nginx plugin will take care of reconfiguring Nginx and reloading the config whenever necessary. To use this plugin, type the following:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo certbot --nginx -d mydomain.com -d www.mydomain.com
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Follow the instructions in the window and complete the setup.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Verify Auto Renewal&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo certbot renew --dry-run
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;nginx-configuration-to-use-ssl&#34;&gt;NGINX Configuration to use SSL&lt;/h3&gt;
&lt;p&gt;Now, open file you created in your text editor with sudo privileges:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo nano /etc/nginx/sites-available/mydomain.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Copy paste the below lines in the file.&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-nginx&#34;&gt;server {
        listen 80;
        listen [::]:80;

        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;

        server_name mydomain.com www.mydomain.com;

        location / {
                try_files $uri $uri/ =404;
        }

}

server {
        listen 443 ssl;
        listen [::]:443 ssl;

        server_name mydomain.com www.mydomain.com;

        location / {
          proxy_pass	http://127.0.0.1:2368;
	        proxy_set_header    X-Real-IP $remote_addr;
	        proxy_set_header    Host      $http_host;
		      proxy_set_header X-Forwarded-Proto https;
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        ssl_certificate /etc/letsencrypt/live/mydomain.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/mydomain.com/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;running-ghost-on-docker&#34;&gt;Running Ghost on Docker&lt;/h3&gt;
&lt;p&gt;We will now use a docker file to pull the docker container and install in our Lightsail instance. You may use any path you are comfortable with. I have used the home directory of the default ubuntu user in the example below.&lt;/p&gt;
&lt;p&gt;The below script assumes that you also want to configure 
&lt;a href=&#34;https://www.mailgun.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Mailgun&lt;/a&gt; with your Ghost blog for triggering emails from the blog.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The most important piece of configuration once you&amp;rsquo;ve been through the install process is to setup mail. Mail configuration allows Ghost to send emails such as lost password and user invite emails.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Follow instruction in the Mailgun setup to get the details for user and password for your account.
  &lt;/div&gt;
&lt;/div&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo nano /home/ubuntu/ghost.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Copy paste the below code in the file. You will have to check the current version of Ghost on Docker Hub and updated the version number to the latest version. &lt;strong&gt;As we are on the lowest configuration of Lightsail instance, it is recommended to use the alpine version of the docker image.&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-vi&#34;&gt;#!/bin/sh
docker rm -f ghost

docker run --name ghost \
 -p 127.0.0.1:2368:2368 \
 -e url=https://www.mydomain.com \
 -v /etc/nginx/mydomain/html:/var/lib/ghost/content \
 -e mail__transport=&amp;quot;SMTP&amp;quot; \
 -e mail__from=&amp;quot;Admin &amp;lt;admin@mydomain.com&amp;gt;&amp;quot; \
 -e mail__options__service=&amp;quot;Mailgun&amp;quot; \
 -e mail__options__port=&amp;quot;587&amp;quot; \
 -e mail__options__host=&amp;quot;smtp.eu.mailgun.org&amp;quot; \
 -e mail__options__auth__user=&amp;quot;postmaster@mail.mydomain.com&amp;quot; \
 -e mail__options__auth__pass=&amp;quot;&amp;lt;use key from mailgun&amp;gt;&amp;quot; \
 --restart=always \
  -d ghost:2.22.0-alpine
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Ghost Docker Hub&lt;/strong&gt; 
&lt;a href=&#34;https://hub.docker.com/_/ghost/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Link&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;alert alert-note&#34;&gt;
  &lt;div&gt;
    Anytime there is a new version of the docker image, just update the script file and run again to update your ghost docker image to the latest version.
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Once the script has completed running, you should be able to access the Ghost blog using the URL &lt;a href=&#34;https://mydomain.com&#34;&gt;https://mydomain.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Add /admin to the URL for the initial setup to setup the Ghost admin account.&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As we have configured the email with Mailgun in our script file, you can click on send button in the Test email configuration under &amp;ldquo;Labs&amp;rdquo; to verify your mailgun settings are working.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>AWS Lightsail</title>
      <link>https://www.nazim.dev/blog/aws-lightsail/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
      <guid>https://www.nazim.dev/blog/aws-lightsail/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Amazon&amp;rsquo;s lightsail&lt;/strong&gt; is a low cost VPS (Virtual Private Servers) with plans starting as low as $3.50 USD per month.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A &lt;strong&gt;virtual private server (VPS)&lt;/strong&gt; is a &lt;em&gt;virtual machine&lt;/em&gt; sold as a service by an Internet hosting service. The virtual dedicated server (VDS) has also a similar meaning.&lt;/p&gt;
&lt;p&gt;A VPS runs its own copy of an operating system (OS), and customers may have superuser-level access to that operating system instance, so they can install almost any software that runs on that OS. For many purposes they are functionally equivalent to a dedicated physical server, and being software-defined, are able to be much more easily created and configured. They are priced much lower than an equivalent physical server.&lt;/p&gt;
&lt;p&gt;For simple websites and servers with minimal load, the $3.50 per month plan (Linux only) with 512MB memory, 1 Core processor, 20 GB SSD and 1TB Transfer rate at a yearly rate of $42 USD is a steal and is much cheaper than the web hosting providers in the market. Windows server plans start at $8.00 USD per month.&lt;/p&gt;
&lt;p&gt;As of writing this blog, there are 21 blueprints available for Linux/Unix instances and 3 blueprints for Windows instances.&lt;/p&gt;





  











&lt;figure id=&#34;figure-linux---apps--os&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.nazim.dev/img/aws-lightsail/Linux_App_OS.jpeg&#34; data-caption=&#34;Linux - Apps &amp;#43; OS&#34;&gt;


  &lt;img src=&#34;https://www.nazim.dev/img/aws-lightsail/Linux_App_OS.jpeg&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Linux - Apps + OS
  &lt;/figcaption&gt;


&lt;/figure&gt;






  











&lt;figure id=&#34;figure-linux---os-only&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.nazim.dev/img/aws-lightsail/Linux_OS_Only.jpeg&#34; data-caption=&#34;Linux - OS Only&#34;&gt;


  &lt;img src=&#34;https://www.nazim.dev/img/aws-lightsail/Linux_OS_Only.jpeg&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Linux - OS Only
  &lt;/figcaption&gt;


&lt;/figure&gt;






  











&lt;figure id=&#34;figure-linux---os-only&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.nazim.dev/img/aws-lightsail/Windows_App_OS.jpeg&#34; data-caption=&#34;Linux - OS Only&#34;&gt;


  &lt;img src=&#34;https://www.nazim.dev/img/aws-lightsail/Windows_App_OS.jpeg&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Linux - OS Only
  &lt;/figcaption&gt;


&lt;/figure&gt;






  











&lt;figure id=&#34;figure-windows---apps--os&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.nazim.dev/img/aws-lightsail/Windows_App_OS.jpeg&#34; data-caption=&#34;Windows - Apps &amp;#43; OS&#34;&gt;


  &lt;img src=&#34;https://www.nazim.dev/img/aws-lightsail/Windows_App_OS.jpeg&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Windows - Apps + OS
  &lt;/figcaption&gt;


&lt;/figure&gt;






  











&lt;figure id=&#34;figure-windows---os-only&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.nazim.dev/img/aws-lightsail/Windows_OS_Only.jpeg&#34; data-caption=&#34;Windows - OS Only&#34;&gt;


  &lt;img src=&#34;https://www.nazim.dev/img/aws-lightsail/Windows_OS_Only.jpeg&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Windows - OS Only
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;h4 id=&#34;all-lightsail-instances-come-with&#34;&gt;All Lightsail instances come with:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Static IP address&lt;/li&gt;
&lt;li&gt;DNS Management&lt;/li&gt;
&lt;li&gt;Server Monitoring&lt;/li&gt;
&lt;li&gt;SSH terminal access (Linux/Unix)&lt;/li&gt;
&lt;li&gt;RDP Access (Windows)&lt;/li&gt;
&lt;li&gt;Management Console&lt;/li&gt;
&lt;li&gt;Secure key management&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;a-wordpress-website-can-be-launched-and-setup-within-few-minutes&#34;&gt;A Wordpress website can be launched and setup within few minutes:&lt;/h4&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/upZOhKhefAs&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h4 id=&#34;advantages-of-using-lightsail&#34;&gt;Advantages of using Lightsail:&lt;/h4&gt;
&lt;p&gt;Lightsail automatically configures networking, access, and security environments, taking the guesswork out of launching your server.&lt;/p&gt;
&lt;p&gt;Every Lightsail server comes with high-performing, persistent SSD-based storage.&lt;/p&gt;
&lt;p&gt;Lightsail servers run on the AWS network that you trust. Configure your network simply and securely, including your IP addresses, DNS, firewall, and more.&lt;/p&gt;
&lt;p&gt;As your ideas grow, a Lightsail load balancer can easily handle your increased traffic and heavier workloads. Plus, you can use the full force of AWS by connecting your project to other AWS services.&lt;/p&gt;
&lt;p&gt;Use the simple and flexible Lightsail API to extend your application or integrate it with external applications.&lt;/p&gt;
&lt;p&gt;Lightsail plans always include a static IP address, DNS management, server monitoring, SSH terminal access (Linux/Unix), RDP access (Windows) and secure key management.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;All Logos and Videos are owned by respective owners. 
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>My Home Assistant Setup</title>
      <link>https://www.nazim.dev/blog/my-home-assistant-setup/</link>
      <pubDate>Wed, 01 May 2019 00:00:00 +0000</pubDate>
      <guid>https://www.nazim.dev/blog/my-home-assistant-setup/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;Open source home automation that puts local control and privacy first. Powered by a worldwide community of tinkerers and DIY enthusiasts. Perfect to run on a Raspberry Pi or a local server.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;my-devices&#34;&gt;My Devices:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Raspberry Pi 3 Model B running Hass IO&lt;/li&gt;
&lt;li&gt;Google Chromecast&lt;/li&gt;
&lt;li&gt;Google Home Mini&lt;/li&gt;
&lt;li&gt;Broadlink RM Pro 433 MHz&lt;/li&gt;
&lt;li&gt;Xiaomi Yeelight&lt;/li&gt;
&lt;li&gt;Funry RF Switches&lt;/li&gt;
&lt;li&gt;Xiaomi BLE Temperature and Humidity sensor&lt;/li&gt;
&lt;li&gt;Xiaomi Aqara Human Body Sensor (using Zigbee2MQTT)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Minor automations handled in Node Red.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Access to Home Assistant interface from outside home network through DuckDNS and Letsencrypt SSL.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;the-below-screen-captures-show-my-current-setup-in-the-home-assistant-ui&#34;&gt;The below screen captures show my current setup in the Home Assistant UI:&lt;/h4&gt;





  











&lt;figure id=&#34;figure-home-ui---lovelace-main-page&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.nazim.dev/img/home-assistant/Snip20190515_3.png&#34; data-caption=&#34;Home UI - Lovelace Main Page&#34;&gt;


  &lt;img src=&#34;https://www.nazim.dev/img/home-assistant/Snip20190515_3.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Home UI - Lovelace Main Page
  &lt;/figcaption&gt;


&lt;/figure&gt;






  











&lt;figure id=&#34;figure-room-light-and-ac-controls-with-temperaturehumidity-monitor&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.nazim.dev/img/home-assistant/Snip20190515_1.png&#34; data-caption=&#34;Room light and A/c controls with temperature/humidity monitor&#34;&gt;


  &lt;img src=&#34;https://www.nazim.dev/img/home-assistant/Snip20190515_1.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Room light and A/c controls with temperature/humidity monitor
  &lt;/figcaption&gt;


&lt;/figure&gt;






  











&lt;figure id=&#34;figure-device-trackers-and-information-page&#34;&gt;


  &lt;a data-fancybox=&#34;&#34; href=&#34;https://www.nazim.dev/img/home-assistant/Snip20190515_2.png&#34; data-caption=&#34;Device trackers and Information page&#34;&gt;


  &lt;img src=&#34;https://www.nazim.dev/img/home-assistant/Snip20190515_2.png&#34; alt=&#34;&#34;  &gt;
&lt;/a&gt;


  
  
  &lt;figcaption&gt;
    Device trackers and Information page
  &lt;/figcaption&gt;


&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;All Photographs are copyrighted.&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
